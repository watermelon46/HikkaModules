# meta developer: @hlnmhikka
__version__ = (1, 0, 1)

from .. import loader
from telethon.tl.types import Message
import logging

logger = logging.getLogger(__name__)

logger.info("lnmCrawler service started")

@loader.tds
class lnmCrawler(loader.Module):
    """–ú–æ–¥—É–ª—å –¥–ª—è —Å–±–æ—Ä–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞."""
    strings = {
        "name": "lnmCrawler",
        "_cfg_doc_id": "ID —á–µ–ª–æ–≤–µ–∫–∞, —á—å–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –±—É–¥—É—Ç –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å—Å—è.",
        "_cfg_doc_group": "ID –≥—Ä—É–ø–ø—ã, –∫—É–¥–∞ –º–æ–¥—É–ª—å –±—É–¥–µ—Ç –Ω–∞–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è"
    }
    
    def __init__(self):
        self.config = loader.ModuleConfig(
        loader.ConfigValue(
               "id",
                0,
                lambda: self.strings("_cfg_doc_id"),
                validator=loader.validators.Integer(),
            ),
            loader.ConfigValue(
                "group",
                0,
                lambda: self.strings("_cfg_doc_group"),
                validator=loader.validators.Integer(),
            )
        )
    
    crawlerEnabled = True


    async def lnmcrawlercmd(self, message: Message):
        """–≤–∫–ª—é—á–∏—Ç—å –∏–ª–∏ –≤—ã–∫–ª—é—á–∏—Ç—å —Å–±–æ—Ä—â–∏–∫"""
        if self.config["id"] == 0:
            await message.edit("<b><emoji document_id=5319156849650441567>üòî</emoji> ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –∑–∞–¥–∞–Ω. –ó–∞–¥–∞–π—Ç–µ –µ–≥–æ –≤ –∫–æ–Ω—Ñ–∏–≥–µ.</b>")
        elif self.config["group"] == 0:
            await message.edit("<b><emoji document_id=5319156849650441567>üòî</emoji> ID –≥—Ä—É–ø–ø—ã –Ω–µ –∑–∞–¥–∞–Ω. –ó–∞–¥–∞–π—Ç–µ –µ–≥–æ –≤ –∫–æ–Ω—Ñ–∏–≥–µ –∏–ª–∏ —á–µ—Ä–µ–∑ .lnmsetgroup</b>")
        elif lnmCrawler.crawlerEnabled == True:
            action = "–≤—ã–∫–ª—é—á–µ–Ω"
            lnmCrawler.crawlerEnabled = False
        else:
            action = "–≤–∫–ª—é—á–µ–Ω"
            lnmCrawler.crawlerEnabled = True
        try:
            await message.edit(f"<b><emoji document_id=5318783359294382499>üòé</emoji> –°–±–æ—Ä—â–∏–∫ {action}.</b>")
        except UnboundLocalError:
            pass

    async def lnmsetgroupcmd(self, message: Message):
        """–Ω–∞–∑–Ω–∞—á–∏—Ç—å –≥—Ä—É–ø–ø—É –º–µ—Å—Ç–æ–º —Å–±–æ—Ä–∞ —Å–æ–æ–±—â–µ–Ω–∏–π"""
        try:
            group = int("-100" + str(message.peer_id.channel_id))
            cntn = True
        except AttributeError:
            await message.edit('<b><emoji document_id=5319111726724030090>üò°</emoji> –ì—Ä—É–ø–ø–∞ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Å—É–ø–µ—Ä–≥—Ä—É–ø–ø–æ–π. –ß–∏—Ç–∞–π—Ç–µ <a href="https://tginfo.me/groups_vs_supergroups/">—ç—Ç—É —Å—Ç–∞—Ç—å—é</a> –¥–ª—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏ –≥—Ä—É–ø–ø—ã –≤ —Å—É–ø–µ—Ä–≥—Ä—É–ø–ø—É, –∏–ª–∏ –∑–∞–¥–∞–π—Ç–µ –∞–π–¥–∏ –≤ –∫–æ–Ω—Ñ–∏–≥–µ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ.<b>')
            cntn = False
        if cntn == True:
            self.config["group"] = group
            await message.edit(f"<b><emoji document_id=5318783359294382499>üòé</emoji> ID –≥—Ä—É–ø–ø—ã –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ {group}</b>")



    async def watcher(self, message):
        if lnmCrawler.crawlerEnabled == True:
            if getattr(message, "from_id", None) == int(self.config["id"]):
                groupId = message.peer_id.channel_id
                msgId = message.id
                msgLink = f'https://t.me/c/{groupId}/{msgId}/'
                try:
                    msg = message.message
                except:
                    msg = '—Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–µ–∫—Å—Ç–∞'
                await message.client.send_message(
                        int(self.config["group"]),
                        f"<b><emoji document_id=5319310759803495101>ü§î</emoji><a href = '{msgLink}'> –ù–∞–π–¥–µ–Ω–æ –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ</a></b>\n\n{msg}",
                )
