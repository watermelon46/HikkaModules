
# meta developer: @zonerkin & @holinimmeta
import logging
import asyncio
from urllib.parse import quote_plus
from .. import loader, utils

logger = logging.getLogger(__name__)

@loader.tds
class Ducko(loader.Module):
    
    __version__ = (1, 1)

    """Ducko"""

    strings = {
        "name":  "Ducko",
        "error": "<b>‚ö† –û—à–∏–±–∫–∞. –í–µ—Ä–æ—è—Ç–Ω–æ, —Ç—ã –Ω–µ —É–∫–∞–∑–∞–ª —Ç–µ–∫—Å—Ç –∑–∞–ø—Ä–æ—Å–∞</b>",
        "success": "<b>üëá –ù–∞–∂–º–∏—Ç–µ –Ω–∏–∂–µ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤ –±—Ä–∞—É–∑–µ—Ä–µ</b>"
    }

    async def duckocmd(self, message):
        """
        [–∑–∞–ø—Ä–æ—Å] - –∏—Å–∫–∞—Ç—å –≤ DuckDuckGo
        """
        query = utils.get_args_raw(message)
        if query:
            await message.edit("–ò—â—É –æ—Ç–≤–µ—Ç—ã –≤ DuckDuckGo...")
            encoded_query = quote_plus(query)
            url = f"https://duckduckgo.com/html/?q={encoded_query}"
            
            await message.edit(f'<b><a href="{url}"><emoji document_id=5188217332748527444>üîç</emoji> –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∑–∞–ø—Ä–æ—Å–∞ {query} –≤ DuckDuckGo</a></b>')
        else:
            await message.edit(self.strings["error"])